import time
import cv2
import numpy as np
import pyautogui

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–¥–µ—Ä–∂–µ–∫ (–¥–ª—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ—Å—Ç–∏)
MOVE_DELAY = (0.1, 0.3)
E_PRESS_DELAY = (0.5, 1.2)
TURN_DELAY = (0.2, 0.5)

# –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫–∞—Ä—Ç—ã –Ω–∞ —ç–∫—Ä–∞–Ω–µ (–ø–æ–¥—Å—Ç—Ä–æ–π –ø–æ–¥ —Å–µ–±—è!)
MAP_REGION = (1600, 800, 300, 200)  # x, y, width, height

# –¶–≤–µ—Ç –∫—Ä–∞—Å–Ω–æ–π –º–µ—Ç–∫–∏ (RGB)
RED_LOWER = np.array([150, 0, 0])
RED_UPPER = np.array([255, 80, 80])


def capture_screen(region=None):
    screenshot = pyautogui.screenshot(region=region)
    return cv2.cvtColor(np.array(screenshot), cv2.COLOR_RGB2BGR)


def find_red_marker():
    img = capture_screen(MAP_REGION)
    mask = cv2.inRange(img, RED_LOWER, RED_UPPER)
    contours, _ = cv2.findContours(mask, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
    if contours:
        largest = max(contours, key=cv2.contourArea)
        x, y, w, h = cv2.boundingRect(largest)
        return x + w // 2, y + h // 2
    return None


def turn_towards_marker(marker):
    screen_center_x = MAP_REGION[2] // 2
    marker_x = marker[0]
    if marker_x < screen_center_x - 20:
        print("‚Ü©Ô∏è –ü–æ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –≤–ª–µ–≤–æ")
        pyautogui.keyDown('a')
        time.sleep(np.random.uniform(*TURN_DELAY))
        pyautogui.keyUp('a')
    elif marker_x > screen_center_x + 20:
        print("‚Ü™Ô∏è –ü–æ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –≤–ø—Ä–∞–≤–æ")
        pyautogui.keyDown('d')
        time.sleep(np.random.uniform(*TURN_DELAY))
        pyautogui.keyUp('d')


def move_character():
    while True:
        marker = find_red_marker()
        if marker:
            print("üü¢ –ú–µ—Ç–∫–∞ –Ω–∞–π–¥–µ–Ω–∞! –î–≤–∏–≥–∞–µ–º—Å—è...")
            turn_towards_marker(marker)
            pyautogui.keyDown('w')  # –ë–µ–∂–∞—Ç—å –≤–ø–µ—Ä—ë–¥
            time.sleep(np.random.uniform(*MOVE_DELAY))
            pyautogui.keyUp('w')
        
        if detect_interact_prompt():
            print("üîµ –ù–∞–∂–∏–º–∞–µ–º E!")
            pyautogui.press('e')
            time.sleep(np.random.uniform(*E_PRESS_DELAY))

        time.sleep(0.5)


def detect_interact_prompt():
    screen = capture_screen()
    gray = cv2.cvtColor(screen, cv2.COLOR_BGR2GRAY)
    _, thresh = cv2.threshold(gray, 200, 255, cv2.THRESH_BINARY)
    if np.sum(thresh) > 500000:  # –ï—Å–ª–∏ –Ω–∞ —ç–∫—Ä–∞–Ω–µ –µ—Å—Ç—å —Å–≤–µ—Ç–ª–∞—è –æ–±–ª–∞—Å—Ç—å
        return True
    return False


if __name__ == "__main__":
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –û–∂–∏–¥–∞–Ω–∏–µ 5 —Å–µ–∫—É–Ω–¥...")
    time.sleep(5)
    move_character()
